# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
#
# NOTE: This workflow is overkill for most R packages and
# check-standard.yaml is likely a better choice.
# usethis::use_github_action("check-standard") will install it.
on:
  push:
    branches: [main, master]
    path-ignore:
      - .github/workflows/pkgdown.yaml
  pull_request:
    branches: [main, master]
    path-ignore:
      - .github/workflows/pkgdown.yaml

name: R-CMD-check.yaml

permissions: read-all

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          # arm mac
          - {os: macos-latest,   r: 'release'}
          # x64 mac
          - {os: macos-13,   r: 'release'}

          - {os: windows-latest, r: 'release'}
          # use 4.0 or 4.1 to check with rtools40's older compiler
          - {os: windows-latest, r: 'oldrel-4'}

          - {os: ubuntu-latest,  r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,  r: 'release'}
          - {os: ubuntu-latest,  r: 'release', no-pandoc: 'no pandoc'}
          - {os: ubuntu-latest,  r: 'oldrel-1'}
          - {os: ubuntu-latest,  r: 'oldrel-2'}
          - {os: ubuntu-latest,  r: 'oldrel-3'}
          - {os: ubuntu-latest,  r: 'oldrel-4'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v4

      - if: ${{ matrix.config.no-pandoc != 'no pandoc'}}
        uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck, local::.
          needs: check

      - if: ${{ matrix.config.no-pandoc == 'no pandoc' && runner.os == 'Linux'}}
        name: Remove Pandoc installed by dependencies
        run: |
          sudo apt-get --purge remove pandoc
          rm -rf vignettes

      - name: Get last release version to cache fetched information
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: pandoc-release
        run: |
          echo "::set-output name=version::$(gh release view -R jgm/pandoc --json tagName -q .tagName)"
        shell: bash

      - name: Cache Pandoc release information
        uses: actions/cache@v4
        id: cache-release
        with:
          path: github-cache.rds
          key: gh-info-${{ steps.pandoc-release.outputs.version}}-1

      - name: Fetch new release info from github
        if: steps.cache-release.outputs.cache-hit != 'true'
        run: saveRDS(pandoc:::fetch_gh_releases(), "github-cache.rds", version = 2)
        shell: Rscript {0}

      - uses: r-lib/actions/check-r-package@v2
        env:
         # Use a cached version of API request
         PANDOC_CACHE_GITHUB: ${{ github.workspace }}/github-cache.rds
        with:
          upload-snapshots: true
          build_args: 'c("--no-manual","--compact-vignettes=gs+qpdf")'

      - name: Test coverage
        if: success() && runner.os == 'Linux' && matrix.config.r == 'release'
        run: |
          pak::pkg_install('covr')
          covr::codecov()
        shell: Rscript {0}
